<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />

	<context:component-scan base-package="com.james">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 静态资源处理， css， js， imgs -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<!-- 静态资源映射 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/images/**" location="/WEB-INF/content/images/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/content/css/" />
	<mvc:resources mapping="/script/**" location="/WEB-INF/content/scripts/" />
	
	<!-- 配置视图解析器，即如何把handler方法返回值解析为实际的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<!--拦截所有的Action -->
	<mvc:interceptors>
		<bean class="com.james.web.interceptors.CommonInterceptor"></bean>
	</mvc:interceptors>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/hello/*" />
			<bean class="com.james.web.interceptors.SecurityInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	 <!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="com.mysql.jdbc.Driver"
	    p:url="jdbc:mysql://localhost:3306/test"
		p:username="root"
		p:password="root" />
		
		<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
		
		
		
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	<!-- <mvc:interceptor> 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller <mvc:mapping 
		path="/" /> <mvc:mapping path="/user/**" /> <mvc:mapping path="/test/**" 
		/> </mvc:interceptor> -->

	<!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<property name="order" value="1" /> <property name="mediaTypes"> <map> <entry 
		key="json" value="application/json" /> <entry key="xml" value="application/xml" 
		/> <entry key="htm" value="text/html" /> </map> </property> <property name="defaultViews"> 
		<list> <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"> 
		</bean> </list> </property> <property name="ignoreAcceptHeader" value="true" 
		/> </bean> --> 
</beans>